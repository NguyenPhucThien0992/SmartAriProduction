{"version":3,"sources":["ultils/setAuthtoken.js","actions/authActions.js","actions/type.js","actions/profileAction.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/homeReducer.js","reducers/alarmReducer.js","reducers/controlReducer.js","reducers/index.js","store.js","components/common/PrivateRoute.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/auth/Login.js","components/dashboard/Dashboard.js","components/notfound/NotFound.js","actions/HomeAction.js","components/home/Home.js","actions/alarmActions.js","components/alarm/Alarm.js","components/common/InputGroup.js","components/control/Control.js","actions/controlActions.js","components/home/HomeOld.js","components/alarm/ControlAlarm.js","components/control-alarm/AlarmRule1.js","components/control-alarm/Control1.js","components/mushroom/MushRoom1.js","components/control-alarm/AlarmRule2.js","components/mushroom/MushRoom2.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","host","process","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","clearCurrentProfile","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","hello","data","alarm","sensor1","sensor2","testing","alarm_sensor1","alarm_sensor2","update_sensor1","update_sensor2","initial","control","combineReducers","auth","state","action","errors","home","console","log","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","connect","Component","component","rest","render","props","to","Navbar","onLogoutClick","e","preventDefault","this","classNameName","href","onClick","src","avatar","alt","name","title","style","width","marginRight","className","data-widget","role","data-accordion","Footer","Date","getFullYear","Landing","history","push","TextFieldGroup","placeholder","error","label","info","onChange","disabled","classnames","defaultProps","Login","UNSAFE_componentWillReceiveProps","nextProps","setState","target","onSubmit","userData","email","password","loginUser","post","then","res","setItem","jwt_decode","catch","err","response","Dashboard","NotFound","getDataSensor1","get","item","smartObjects","values","getDataSensor2","Home","conditionType","highThreshold","lowThreshold","checkedValue","interval","setInterval","carValueSen1","carbonicSen1","temValueSen1","temperatureSen1","humidValueSen1","humiditySen1","carValueSen2","carbonicSen2","temValueSen2","temperatureSen2","humidValueSen2","humiditySen2","getAlarmSensor1","getAlarmSensor2","updateAlarmSensor1","alarmData","Alarm","renderTem_sen1","renderHumid_sen1","renderCar_sen1","temperatureValue2_sen1","temperatureValue_sen1","parseFloat","humidValue2_sen1","humidValue_sen1","carbonicValue2_sen1","carbonicValue_sen1","alarmPayload_sen1","highTem_sen1","lowTem_sen1","highHumid_sen1","lowHumid_sen1","highCar_sen1","lowCar_sen1","scope","renderTem_sen2","renderHumid_sen2","renderCar_sen2","temperatureValue2_sen2","temperatureValue_sen2","humidValue2_sen2","humidValue_sen2","carbonicValue2_sen2","carbonicValue_sen2","alarmPayload_sen2","highTem_sen2","lowTem_sen2","highHumid_sen2","lowHumid_sen2","highCar_sen2","lowCar_sen2","backgroundColor","withRouter","InputGroup","icon","Control","controlManual","fan1","for","HomeOld","ControlAlarm","HighTem","HighTem_sensor1","HighHumid","HighHumid_sensor1","HighCar","HighCar_sensor1","LowTem","LowTem_sensor1","LowHumid","LowHumid_sensor1","LowCar","LowCar_sensor1","get_AlarmSensor1","Payload","AlarmRule1","class","Control1","setStatefan1","tmp","fan1_status","JSON","stringify","callPublishFan1","onClickFan1","a","onClickFan2","fan1ControlOff","fan1ControlOn","onClick2","testing_status","status","fan2","fan2_status","machineHumid1","machineHumid1_status","machineHumid2","machineHumid2_status","shockTemperature1","shockTemperature1_status","shockTemperature2","shockTemperature2_status","light1","light1_status","light2","light2_status","roof1","roof1_status","roof2","roof2_status","fanCO1","fanC01_status","fanCO2","fanCO2_status","getItem","tmp1","parse","tmp2","tmp3","tmp4","tmp5","tmp6","tmp7","tmp8","tmp9","tmp10","tmp11","fanCO1_status","tmp12","MushRoom1","CarbonicValue","TemperatureValue","HumidityValue","data-toggle","id","AlarmRule2","HighTem_sensor2","HighHumid_sensor2","HighCar_sensor2","LowTem_sensor2","LowHumid_sensor2","LowCar_sensor2","updateAlarmSensor2","get_AlarmSensor2","MushRoom2","jwtToken","jwt_decoded","currentTime","now","exp","location","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.167f802e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    //DElete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { GET_ERRORS, SET_CURRENT_USER } from \"./type\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./../ultils/setAuthtoken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nconst host = process.env.REACT_APP_HOST_API;\r\n//Register\r\nexport const registerUser = (userData, history) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(`${host}/api/users/register`, userData)\r\n      .then(res => {\r\n        // console.log(\"res\", res);\r\n        // console.log(\"result\", res.data);\r\n        history.push(\"/login\");\r\n      })\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n//Login  - get user token\r\n\r\nexport const loginUser = userData => {\r\n  return dispatch => {\r\n    axios\r\n      .post(`${host}/api/users/login`, userData)\r\n      .then(res => {\r\n        //Save to local storage\r\n        const { token } = res.data;\r\n\r\n        // Set token to local storage\r\n        //convert json to string\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // Set token to Auth header\r\n        setAuthToken(token);\r\n        // Decode token to get user data\r\n        const decoded = jwt_decode(token);\r\n        //Set current user\r\n        dispatch(setCurrentUser(decoded));\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n//Log user out\r\n\r\nexport const logoutUser = () => {\r\n  return dispatch => {\r\n    //Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    //Remove auth header for future request\r\n    // Truyền vào false để nó nhảy vào trường hợp false số 2 của setAuthToken để nó tự độnng xoá header ở đó\r\n    setAuthToken(false);\r\n    // Set current user to {empty object} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n  };\r\n};\r\n","export const TEST_DISPATCH = \"TEST_DISPATCH\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_NOTFOUND = \"PROFILE_NOTFOUND\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\n\r\nexport const POST_LOADING = \"POST_LOADING\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\n// Home\r\nexport const GET_DATA = \"GET_DATA\";\r\nexport const INITIAL_DEVICE = \"INITIAL_DEVICE\";\r\nexport const TESTING = \"TESTING\";\r\n\r\n// Alrm\r\nexport const UPDATE_ALARM = \"UPDATE_ALARM\";\r\nexport const GET_ALARM = \"GET_ALARM\";\r\n\r\n// Control\r\nexport const CONTROL_MANUAL = \"CONTROL_MANUAL \";\r\nexport const GET_CONTROL = \"GET_CONTROL\";\r\nexport const FAN_CONTROL = \"FAN_CONTROL\";\r\nexport const HUM_CONTROL = \"HUM_CONTROL\";\r\nexport const CAR_CONTROL = \"CAR_CONTROL\";\r\n//Control\r\nexport const FAN1_CONTROL_ON = \"FAN1_CONTROL_ON\";\r\nexport const FAN1_CONTROL_OFF = \"FAN_CONTROL_OFF\";\r\nexport const CAR_CONTROL_ON = \"CAR_CONTROL_ON\";\r\nexport const CAR_CONTROL_OFF = \"CAR_CONTROL_OFF\";\r\nexport const HUMID_CONTROL_ON = \"HUMID_CONTROL_ON\";\r\nexport const HUMID_CONTROL_OFF = \"HUMID_CONTROL_OFF\";\r\n\r\n/// Get data from sensor\r\nexport const GET_DATA_SENSOR1 = \"GET_DATA_SENSOR1\";\r\nexport const GET_DATA_SENSOR2 = \"GET_DATA_SENSOR2\";\r\nexport const GET_ALARM_SENSOR1 = \"GET_ALARM_SENSOR1\";\r\nexport const GET_ALARM_SENSOR2 = \"GET_ALARM_SENSOR2\";\r\n\r\n// Update alarm 1\r\nexport const UPDATE_ALARM_SENSOR1 = \"UPDATE_ALARM_SENSOR1\";\r\nexport const UPDATE_ALARM_SENSOR2 = \"UPDATE_ALARM_SENSOR2\";\r\n\r\n//\r\nexport const TESTING2 = \"TESTING2\";\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER\r\n} from \"./type\";\r\n\r\n//get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n\r\n  axios\r\n    .get(\"/api/profile\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      });\r\n    });\r\n};\r\n//get profile by handle\r\nexport const getProfileByHandle = handle => dispatch => {\r\n  dispatch(setProfileLoading());\r\n\r\n  axios\r\n    .get(`/api/profile/handle/${handle}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: null\r\n      });\r\n    });\r\n};\r\n\r\n//Create Profile\r\nexport const createProfile = (profileData, history) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/profile\", profileData)\r\n      .then(res => history.push(\"/dashboard\"))\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n//Delete account and profile\r\nexport const deleteAccount = () => {\r\n  return dispatch => {\r\n    if (window.confirm(\"Are you sure? This can NOT be undone\")) {\r\n      axios\r\n        .delete(\"api/profile\")\r\n        .then(res => {\r\n          dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: {}\r\n          });\r\n        })\r\n        .catch(err => {\r\n          dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\n//Add expericence\r\nexport const addExperience = (expData, history) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/profile/experience\", expData)\r\n      .then(res => history.push(\"/dashboard\"))\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n//Add education\r\nexport const addEducation = (eduData, history) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/profile/education\", eduData)\r\n      .then(res => history.push(\"/dashboard\"))\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n//delete experience\r\nexport const deleteExperience = id => {\r\n  return dispatch => {\r\n    axios\r\n      .delete(`/api/profile/experience/${id}`)\r\n      .then(res =>\r\n        dispatch({\r\n          type: GET_PROFILE,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n//delete EDUCATION\r\nexport const deleteEducation = id => {\r\n  return dispatch => {\r\n    axios\r\n      .delete(`/api/profile/education/${id}`)\r\n      .then(res =>\r\n        dispatch({\r\n          type: GET_PROFILE,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n//get all profiles\r\nexport const getProfiles = () => {\r\n  return dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios\r\n      .get(\"/api/profile/all\")\r\n      .then(res =>\r\n        dispatch({\r\n          type: GET_PROFILES,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_PROFILES,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\n//Profile Loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n//Clear profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n","const isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import { TEST_DISPATCH, SET_CURRENT_USER } from \"./../actions/type\";\r\nimport isEmpty from \"./../validation/is-empty\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  hello: \"test\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TEST_DISPATCH:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"./../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_ERRORS:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_DATA,\r\n  GET_ALARM,\r\n  GET_DATA_SENSOR1,\r\n  GET_DATA_SENSOR2,\r\n  TESTING2\r\n} from \"./../actions/type\";\r\n\r\nconst initialState = {\r\n  data: null,\r\n  alarm: null,\r\n  sensor1: null,\r\n  sensor2: null,\r\n  testing: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return { ...state, data: action.payload };\r\n    case GET_ALARM:\r\n      return {\r\n        ...state,\r\n        alarm: action.payload\r\n      };\r\n    case GET_DATA_SENSOR1:\r\n      return {\r\n        ...state,\r\n        sensor1: action.payload\r\n      };\r\n    case GET_DATA_SENSOR2:\r\n      return {\r\n        ...state,\r\n        sensor2: action.payload\r\n      };\r\n    case TESTING2:\r\n      return {\r\n        ...state,\r\n        testing: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  UPDATE_ALARM,\r\n  GET_ALARM_SENSOR1,\r\n  GET_ALARM_SENSOR2,\r\n  UPDATE_ALARM_SENSOR1,\r\n  UPDATE_ALARM_SENSOR2\r\n} from \"./../actions/type\";\r\n\r\nconst initialState = {\r\n  alarm: null,\r\n  alarm_sensor1: null,\r\n  alarm_sensor2: null,\r\n  update_sensor1: null,\r\n  update_sensor2: null,\r\n  initial: 23\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ALARM:\r\n      return {\r\n        ...state,\r\n        alarm: action.payload\r\n      };\r\n    case GET_ALARM_SENSOR1:\r\n      return {\r\n        ...state,\r\n        alarm_sensor1: action.payload\r\n      };\r\n    case GET_ALARM_SENSOR2:\r\n      return {\r\n        ...state,\r\n        alarm_sensor2: action.payload\r\n      };\r\n    case UPDATE_ALARM_SENSOR1:\r\n      return {\r\n        ...state\r\n      };\r\n    case UPDATE_ALARM_SENSOR2:\r\n      return {\r\n        ...state\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CONTROL_MANUAL,\r\n  GET_CONTROL,\r\n  FAN_CONTROL,\r\n  FAN1_CONTROL_ON,\r\n  FAN1_CONTROL_OFF,\r\n  HUMID_CONTROL_ON,\r\n  HUMID_CONTROL_OFF,\r\n  CAR_CONTROL_ON,\r\n  CAR_CONTROL_OFF\r\n} from \"./../actions/type\";\r\nimport isEmpty from \"../validation/is-empty\";\r\n\r\nconst initialState = {\r\n  control: null\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CONTROL_MANUAL:\r\n      console.log(\"res\", action.payload);\r\n      return state;\r\n    case GET_CONTROL:\r\n      return {\r\n        ...state,\r\n        control: action.payload\r\n      };\r\n    case FAN_CONTROL:\r\n      return {\r\n        ...state\r\n      };\r\n    case FAN1_CONTROL_ON:\r\n      return { ...state };\r\n    case FAN1_CONTROL_OFF:\r\n      return { ...state };\r\n    case HUMID_CONTROL_ON:\r\n      return { ...state };\r\n    case HUMID_CONTROL_OFF:\r\n      return { ...state };\r\n    case CAR_CONTROL_ON:\r\n      return { ...state };\r\n    case CAR_CONTROL_OFF:\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport homeReducer from \"./homeReducer\";\r\nimport alarmReducer from \"./alarmReducer\";\r\nimport controlReducer from \"./controlReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  home: homeReducer,\r\n  alarm: alarmReducer,\r\n  control: controlReducer\r\n});\r\n","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\napplyMiddleware(...middleware), \r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props}></Component>\r\n      ) : (\r\n        <Redirect to=\"/login\"></Redirect>\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapState = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapState, null)(PrivateRoute);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logoutUser } from \"./../../actions/authActions\";\r\nimport { clearCurrentProfile } from \"./../../actions/profileAction\";\r\n\r\nclass Navbar extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.clearCurrentProfile();\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    const authLinks = (\r\n      <ul classNameName=\"navbar-nav ml-auto\">\r\n        <li classNameName=\"nav-item\">\r\n          <Link classNameName=\"nav-link\" to=\"/feed\">\r\n            Post Feed\r\n          </Link>\r\n        </li>\r\n        <li classNameName=\"nav-item\">\r\n          <Link classNameName=\"nav-link\" to=\"/dashboard\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n        <li classNameName=\"nav-item\">\r\n          <a href=\"#\" classNameName=\"nav-link\" onClick={this.onLogoutClick}>\r\n            <img\r\n              classNameName=\"rounded-circle\"\r\n              src={user.avatar}\r\n              alt={user.name}\r\n              title=\"You must have a  Gravatar connected to your email to display an image\"\r\n              style={{ width: \"25px\", marginRight: \"5px\" }}\r\n            ></img>\r\n            Logout\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const guestLinks = (\r\n      <ul classNameName=\"navbar-nav ml-auto\">\r\n        <li classNameName=\"nav-item\">\r\n          <Link classNameName=\"nav-link\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li classNameName=\"nav-item\">\r\n          <Link classNameName=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\">\r\n                <i className=\"fas fa-bars\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n          <Link to=\"/home\" className=\"brand-link\">\r\n            <span className=\"brand-text font-weight-light\">\r\n              Smart Ariculture\r\n            </span>\r\n          </Link>\r\n\r\n          <div className=\"sidebar\">\r\n            <nav className=\"mt-2\">\r\n              <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n              >\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/alarm\" className=\"nav-link\">\r\n                    <i className=\"nav-icon fas fa-th\"></i>Cảnh báo\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item has-treeview\">\r\n                  <a href=\"#\" className=\"nav-link\">\r\n                    <i className=\"nav-icon fas fa-table\"></i>\r\n                    <p>\r\n                      Nhà nấm Thanh Tâm\r\n                      <i className=\"fas fa-angle-left right\"></i>\r\n                    </p>\r\n                  </a>\r\n                  <ul className=\"nav nav-treeview\">\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/nha-nam-bao-ngu\" className=\"nav-link\">\r\n                        <i className=\"far fa-circle nav-icon\"></i>\r\n                        <p>Nhà Nấm Bào Ngư</p>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/nha-nam-moi-den\" className=\"nav-link\">\r\n                        <i className=\"far fa-circle nav-icon\"></i>\r\n                        <p>Nhà Nấm Mối Đen</p>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </aside>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapState = state => ({ auth: state.auth });\r\n\r\nexport default connect(mapState, { logoutUser, clearCurrentProfile })(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport \"./../../style/Footer.css\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"bg-dark text-white mt-5 p-4 text-center footer\">\r\n        Copyright &copy; {new Date().getFullYear()} Smart Culture\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Developer Connector</h1>\r\n                <p className=\"lead\">\r\n                  Create a developer profile/portfolio, share posts and get help\r\n                  from other developers\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapState = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapState, null)(Landing);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  error,\r\n  info,\r\n  type,\r\n  onChange,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string\r\n};\r\nTextFieldGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextFieldGroup;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"./../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    // this.onChange = this.onChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps = nextProps => {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"login\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h1 className=\"display-4 text-center\">Log In</h1>\r\n                <p className=\"lead text-center\">Sign in to Smart Culture</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <TextFieldGroup\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  ></TextFieldGroup>\r\n                  <TextFieldGroup\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                    error={errors.password}\r\n                  ></TextFieldGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-info btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapState = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapState, { loginUser })(Login);\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div>asdas</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">Page Not Found</h1>\r\n        <p>Sorry, page does not exist</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  GET_DATA,\r\n  INITIAL_DEVICE,\r\n  GET_ALARM,\r\n  GET_DATA_SENSOR1,\r\n  GET_DATA_SENSOR2,\r\n  TESTING2\r\n} from \"../actions/type\";\r\nimport axios from \"axios\";\r\nconst host = process.env.REACT_APP_HOST_API;\r\n\r\nexport const initialDevice = () => {\r\n  return dispatch => {\r\n    axios.get(\"/api/home/initial\").then(res => {\r\n      dispatch({\r\n        type: INITIAL_DEVICE\r\n      });\r\n    });\r\n  };\r\n};\r\nexport const getData = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"/api/home/getdata\")\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_DATA,\r\n          payload: res\r\n        });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const getAlarm = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(\"api/alarm/getAlarm\")\r\n      .then(res => {\r\n        dispatch({\r\n          type: GET_ALARM,\r\n          payload: res\r\n        });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const getDataSensor1 = () => {\r\n  return dispatch => {\r\n    axios.get(`${host}/api/home/get-data-sensor1`).then(res => {\r\n      if (res && res !== null && res !== undefined) {\r\n        var data = res[\"data\"];\r\n        var data2 = data[\"data\"];\r\n        var item = data2[\"Items\"];\r\n        var value = Object.values(item)[0];\r\n        var payload = value[\"payload\"];\r\n        var state = payload[\"state\"];\r\n        var reported = state[\"reported\"];\r\n        var smartObjects = reported[\"smart_objects\"];\r\n      }\r\n      dispatch({\r\n        type: GET_DATA_SENSOR1,\r\n        payload: smartObjects\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getDataSensor2 = () => {\r\n  return dispatch => {\r\n    axios.get(`${host}/api/home/get-data-sensor2`).then(res => {\r\n      if (res && res !== null && res !== undefined) {\r\n        var data = res[\"data\"];\r\n        var data2 = data[\"data\"];\r\n        var item = data2[\"Items\"];\r\n        var value = Object.values(item)[0];\r\n        var payload = value[\"payload\"];\r\n        var state = payload[\"state\"];\r\n        var reported = state[\"reported\"];\r\n        var smartObjects = reported[\"smart_objects\"];\r\n      }\r\n      dispatch({\r\n        type: GET_DATA_SENSOR2,\r\n        payload: smartObjects\r\n      });\r\n    });\r\n  };\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDataSensor1, getDataSensor2 } from \"./../../actions/HomeAction\";\r\nimport \"./../../style/Home.css\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      conditionType: \"temperature\",\r\n      highThreshold: \"\",\r\n      lowThreshold: \"\",\r\n      checkedValue: false\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getDataSensor1();\r\n    this.props.getDataSensor2();\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.props.getDataSensor1();\r\n      this.props.getDataSensor2();\r\n    }, 3000);\r\n  }\r\n  render() {\r\n    const { sensor1, sensor2 } = this.props;\r\n    if (sensor1 && sensor1 !== null && sensor1 !== undefined) {\r\n      // Carbonic\r\n      var carDataSen1 = Object.values(sensor1)[0];\r\n      var carValueSen1 = carDataSen1[\"value\"];\r\n      var carElementSen1 = Object.values(carValueSen1)[0];\r\n      var carbonicSen1 = carElementSen1[\"value\"];\r\n\r\n      // Temperature\r\n      var temDataSen1 = Object.values(sensor1)[1];\r\n      var temValueSen1 = temDataSen1[\"value\"];\r\n      var temElementSen1 = Object.values(temValueSen1)[0];\r\n      var temperatureSen1 = temElementSen1[\"value\"];\r\n\r\n      // humidity\r\n      var humidDataSen1 = Object.values(sensor1)[1];\r\n      var humidValueSen1 = humidDataSen1[\"value\"];\r\n      var humidElementSen1 = Object.values(humidValueSen1)[0];\r\n      var humiditySen1 = humidElementSen1[\"value\"];\r\n    }\r\n\r\n    if (sensor2 && sensor2 !== null && sensor2 !== undefined) {\r\n      // Carbonic\r\n      var carDataSen2 = Object.values(sensor2)[0];\r\n      var carValueSen2 = carDataSen2[\"value\"];\r\n      var carElementSen2 = Object.values(carValueSen2)[0];\r\n      var carbonicSen2 = carElementSen2[\"value\"];\r\n\r\n      // Temperature\r\n      var temDataSen2 = Object.values(sensor2)[1];\r\n      var temValueSen2 = temDataSen2[\"value\"];\r\n      var temElementSen2 = Object.values(temValueSen2)[0];\r\n      var temperatureSen2 = temElementSen2[\"value\"];\r\n\r\n      // humidity\r\n      var humidDataSen2 = Object.values(sensor2)[2];\r\n      var humidValueSen2 = humidDataSen2[\"value\"];\r\n      var humidElementSen2 = Object.values(humidValueSen2)[0];\r\n      var humiditySen2 = humidElementSen2[\"value\"];\r\n    }\r\n    console.log(\"Sensor1\", sensor1);\r\n    console.log(\"Sensor2\", sensor2);\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0 text-dark\">Nhà nấm Thanh Tâm</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6 col-6\">\r\n                <div className=\"small-box bg-info\">\r\n                  <div className=\"inner\">\r\n                    <h3>Nhà nấm bào ngư</h3>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <p className=\"titleDetail\">\r\n                          <span className=\"subTitle\">Nhiệt độ</span>\r\n                          <i className=\"fas fa-thermometer-half\"></i>\r\n                          <span className=\"titleValue\">{temperatureSen1}</span>\r\n                          <span>\r\n                            <sup>o</sup>C\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <p className=\"titleDetail\">\r\n                          <span className=\"subTitle\">Độ ẩm</span>\r\n                          <i className=\"fas fa-cloud-rain\"></i>\r\n                          <span className=\"titleValue\">{humiditySen1}</span>\r\n                          <span>%</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <p className=\"titleDetail\">\r\n                          <span className=\"subTitle\">CO2</span>\r\n                          <i className=\"fas fa-water\"></i>\r\n                          <span className=\"titleValue\">{carbonicSen1}</span>\r\n                          <span>ppm</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Link to=\"/nha-nam-bao-ngu\" className=\"small-box-footer\">\r\n                    Xem chi tiết...\r\n                    <i className=\"fas fa-arrow-circle-right\"></i>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              {/* End nhà bấm bào ngư 1  */}\r\n              <div className=\"col-lg-6 col-6\">\r\n                <div className=\"small-box bg-warning\">\r\n                  <div className=\"inner\">\r\n                    <h3>Nhà nấm mối đen</h3>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <p className=\"titleDetail\">\r\n                          <span className=\"subTitle\">Nhiệt độ</span>\r\n                          <i className=\"fas fa-thermometer-half\"></i>\r\n                          <span className=\"titleValue\">{temperatureSen2}</span>\r\n                          <span>\r\n                            <sup>o</sup>C\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <p className=\"titleDetail\">\r\n                          <span className=\"subTitle\">Độ ẩm</span>\r\n                          <i className=\"fas fa-cloud-rain\"></i>\r\n                          <span className=\"titleValue\">{humiditySen2}</span>\r\n                          <span>%</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <p className=\"titleDetail\">\r\n                          <span className=\"subTitle\">CO2</span>\r\n                          <i className=\"fas fa-water\"></i>\r\n                          <span className=\"titleValue\">{carbonicSen2}</span>\r\n                          <span>ppm</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Link to=\"#\" className=\"small-box-footer\">\r\n                    Xem chi tiết...{\" \"}\r\n                    <i className=\"fas fa-arrow-circle-right\"></i>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              {/* End nhà nấm mối đen  */}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapState = state => {\r\n  return {\r\n    sensor1: state.home.sensor1,\r\n    sensor2: state.home.sensor2\r\n  };\r\n};\r\nexport default connect(mapState, {\r\n  getDataSensor1,\r\n  getDataSensor2\r\n})(Home);\r\n","import {\r\n  UPDATE_ALARM,\r\n  INITIAL_DEVICE,\r\n  GET_ALARM_SENSOR1,\r\n  GET_ALARM_SENSOR2,\r\n  UPDATE_ALARM_SENSOR1,\r\n  UPDATE_ALARM_SENSOR2\r\n} from \"../actions/type\";\r\nimport axios from \"axios\";\r\n\r\nconst host = process.env.REACT_APP_HOST_API;\r\n\r\nexport const initialDevice = () => {\r\n  return dispatch => {\r\n    axios.get(`${host}/api/home/initial`).then(res => {\r\n      dispatch({\r\n        type: INITIAL_DEVICE\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateAlarm = (alarmData, history) => {\r\n  return dispatch => {\r\n    axios\r\n      .put(`${host}/api/alarm/update-alarm`, alarmData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: UPDATE_ALARM,\r\n          payload: res\r\n        });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const getAlarmSensor1 = () => {\r\n  return dispatch => {\r\n    axios.get(`${host}/api/alarm/get-alarm-sensor1`).then(res => {\r\n      dispatch({\r\n        type: GET_ALARM_SENSOR1,\r\n        payload: res.data\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getAlarmSensor2 = () => {\r\n  return dispatch => {\r\n    axios.get(`${host}/api/alarm/get-alarm-sensor2`).then(res => {\r\n      dispatch({\r\n        type: GET_ALARM_SENSOR2,\r\n        payload: res.data\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateAlarmSensor1 = alarmData => {\r\n  return dispatch => {\r\n    axios.post(`${host}/pi/alarm/update-alarm-sensor1`, alarmData).then(res => {\r\n      dispatch({\r\n        type: UPDATE_ALARM_SENSOR1\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateAlarmSensor2 = alarmData => {\r\n  return dispatch => {\r\n    axios\r\n      .post(`${host}/api/alarm/update-alarm-sensor2`, alarmData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: UPDATE_ALARM_SENSOR2\r\n        });\r\n      });\r\n  };\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateAlarm } from \"./../../actions/alarmActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDataSensor1, getDataSensor2 } from \"./../../actions/HomeAction\";\r\nimport { getAlarmSensor1, getAlarmSensor2 } from \"./../../actions/alarmActions\";\r\nimport \"./../../style/Alarm.css\";\r\n\r\nclass Alarm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getDataSensor1();\r\n    this.props.getDataSensor2();\r\n    this.props.getAlarmSensor1();\r\n    this.props.getAlarmSensor2();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.props.getDataSensor1();\r\n      this.props.getDataSensor2();\r\n      this.props.getAlarmSensor1();\r\n      this.props.getAlarmSensor2();\r\n    }, 4000);\r\n  }\r\n  render() {\r\n    const { sensor1 } = this.props;\r\n    if (sensor1 && sensor1 !== null && sensor1 !== undefined) {\r\n      //temperature\r\n      var temperature_sen1 = sensor1[1];\r\n      var temperatureValue3_sen1 = temperature_sen1[\"value\"];\r\n      var temperatureValue2_sen1 = temperatureValue3_sen1[0];\r\n      var temperatureValue_sen1 = parseFloat(temperatureValue2_sen1[\"value\"]);\r\n      //humid\r\n      var humid_sen1 = sensor1[2];\r\n      var humidValue3_sen1 = humid_sen1[\"value\"];\r\n      var humidValue2_sen1 = humidValue3_sen1[0];\r\n      var humidValue_sen1 = parseFloat(humidValue2_sen1[\"value\"]);\r\n      //carbonic\r\n      var carbonic_sen1 = sensor1[0];\r\n      var carbonicValue3_sen1 = carbonic_sen1[\"value\"];\r\n      var carbonicValue2_sen1 = carbonicValue3_sen1[0];\r\n      var carbonicValue_sen1 = parseFloat(carbonicValue2_sen1[\"value\"]);\r\n      //==================== Alarm =================\r\n      const { alarm_sensor1 } = this.props;\r\n      var renderTem_sen1, renderHumid_sen1, renderCar_sen1;\r\n      if (\r\n        alarm_sensor1 &&\r\n        alarm_sensor1 !== null &&\r\n        alarm_sensor1 !== undefined\r\n      ) {\r\n        var alarmRaw_sen1 = alarm_sensor1[\"data\"];\r\n        var alarmData_sen1 = alarmRaw_sen1[\"Items\"];\r\n        var alarm_sen1 = alarmData_sen1[0];\r\n        var alarmPayload_sen1 = alarm_sen1[\"Payload\"];\r\n        var highTem_sen1 = parseFloat(alarmPayload_sen1[\"HighTem\"]);\r\n        var lowTem_sen1 = parseFloat(alarmPayload_sen1[\"LowTem\"]);\r\n        var highHumid_sen1 = parseFloat(alarmPayload_sen1[\"HighHumid\"]);\r\n        var lowHumid_sen1 = parseFloat(alarmPayload_sen1[\"LowHumid\"]);\r\n        var highCar_sen1 = parseFloat(alarmPayload_sen1[\"HighCar\"]);\r\n        var lowCar_sen1 = parseFloat(alarmPayload_sen1[\"LowCar\"]);\r\n        if (\r\n          temperatureValue_sen1 < lowTem_sen1 ||\r\n          temperatureValue_sen1 > highTem_sen1\r\n        ) {\r\n          renderTem_sen1 = (\r\n            <tr className=\"overThreshold\">\r\n              <th scope=\"row\">1</th>\r\n              <td>Nhà nấm bào ngư</td>\r\n              <td>Cảnh báo nhiệt độ</td>\r\n              <td>\r\n                Quá ngưỡng. <br />\r\n                Nhiệt độ hiện tại là : {temperatureValue_sen1}\r\n                <br />\r\n                Ngưỡng cho phép : {lowTem_sen1} - {highTem_sen1}\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else {\r\n          renderTem_sen1 = (\r\n            <tr className=\"normalThreshold\">\r\n              <th scope=\"row\">1</th>\r\n              <td>Nhà nấm bào ngư</td>\r\n              <td>Cảnh báo nhiệt độ</td>\r\n              <td>Hoạt động bình thường</td>\r\n            </tr>\r\n          );\r\n        }\r\n        if (\r\n          humidValue_sen1 < lowHumid_sen1 ||\r\n          humidValue_sen1 > highHumid_sen1\r\n        ) {\r\n          renderHumid_sen1 = (\r\n            <tr className=\"overThreshold\">\r\n              <th scope=\"row\">2</th>\r\n              <td>Nhà nấm bào ngư</td>\r\n              <td>Cảnh báo độ ẩm</td>\r\n              <td>\r\n                Quá ngưỡng. <br />\r\n                Độ ẩm hiện tại là : {humidValue_sen1}\r\n                <br />\r\n                Ngưỡng cho phép : {lowHumid_sen1} - {highHumid_sen1}\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else {\r\n          renderHumid_sen1 = (\r\n            <tr className=\"normalThreshold\">\r\n              <th scope=\"row\">2</th>\r\n              <td>Nhà nấm bào ngư</td>\r\n              <td>Cảnh báo độ ẩm</td>\r\n              <td>Hoạt động bình thường</td>\r\n            </tr>\r\n          );\r\n        }\r\n        if (\r\n          carbonicValue_sen1 < lowCar_sen1 ||\r\n          carbonicValue_sen1 > highCar_sen1\r\n        ) {\r\n          renderCar_sen1 = (\r\n            <tr className=\"overThreshold\">\r\n              <th scope=\"row\">3</th>\r\n              <td>Nhà nấm bào ngư</td>\r\n              <td>Cảnh báo carbonic</td>\r\n              <td>\r\n                Quá ngưỡng. <br />\r\n                Carbonic hiện tại là : {carbonicValue_sen1}\r\n                <br />\r\n                Ngưỡng cho phép : {lowCar_sen1} - {highCar_sen1}\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else {\r\n          renderCar_sen1 = (\r\n            <tr className=\"normalThreshold\">\r\n              <th scope=\"row\">3</th>\r\n              <td>Nhà nấm bào ngư</td>\r\n              <td>Cảnh báo carbobic</td>\r\n              <td>Hoạt động bình thường</td>\r\n            </tr>\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    // <------------------------- SENSOR 2 ------------------------------>\r\n    // ------------------------------------------------------------------\r\n    const { sensor2 } = this.props;\r\n    if (sensor2 && sensor2 !== null && sensor2 !== undefined) {\r\n      //temperature\r\n      var temperature_sen2 = sensor2[1];\r\n      var temperatureValue3_sen2 = temperature_sen2[\"value\"];\r\n      var temperatureValue2_sen2 = temperatureValue3_sen2[0];\r\n      var temperatureValue_sen2 = parseFloat(temperatureValue2_sen2[\"value\"]);\r\n      //humid\r\n      var humid_sen2 = sensor2[2];\r\n      var humidValue3_sen2 = humid_sen2[\"value\"];\r\n      var humidValue2_sen2 = humidValue3_sen2[0];\r\n      var humidValue_sen2 = parseFloat(humidValue2_sen2[\"value\"]);\r\n      //carbonic\r\n      var carbonic_sen2 = sensor2[0];\r\n      var carbonicValue3_sen2 = carbonic_sen2[\"value\"];\r\n      var carbonicValue2_sen2 = carbonicValue3_sen2[0];\r\n      var carbonicValue_sen2 = parseFloat(carbonicValue2_sen2[\"value\"]);\r\n      //==================== Alarm =================\r\n      const { alarm_sensor2 } = this.props;\r\n      var renderTem_sen2, renderHumid_sen2, renderCar_sen2;\r\n      if (\r\n        alarm_sensor2 &&\r\n        alarm_sensor2 !== null &&\r\n        alarm_sensor2 !== undefined\r\n      ) {\r\n        var alarmRaw_sen2 = alarm_sensor2[\"data\"];\r\n        var alarmData_sen2 = alarmRaw_sen2[\"Items\"];\r\n        var alarm_sen2 = alarmData_sen2[0];\r\n        var alarmPayload_sen2 = alarm_sen2[\"Payload\"];\r\n        var highTem_sen2 = parseFloat(alarmPayload_sen2[\"HighTem\"]);\r\n        var lowTem_sen2 = parseFloat(alarmPayload_sen2[\"LowTem\"]);\r\n        var highHumid_sen2 = parseFloat(alarmPayload_sen2[\"HighHumid\"]);\r\n        var lowHumid_sen2 = parseFloat(alarmPayload_sen2[\"LowHumid\"]);\r\n        var highCar_sen2 = parseFloat(alarmPayload_sen2[\"HighCar\"]);\r\n        var lowCar_sen2 = parseFloat(alarmPayload_sen2[\"LowCar\"]);\r\n\r\n        if (\r\n          temperatureValue_sen2 < lowTem_sen2 ||\r\n          temperatureValue_sen2 > highTem_sen2\r\n        ) {\r\n          renderTem_sen2 = (\r\n            <tr className=\"overThreshold\">\r\n              <th scope=\"row\">4</th>\r\n              <td>Nhà nấm mối đen</td>\r\n              <td>Cảnh báo nhiệt độ</td>\r\n              <td>\r\n                Quá ngưỡng. <br />\r\n                Nhiệt độ hiện tại là : {temperatureValue_sen2}\r\n                <br />\r\n                Ngưỡng cho phép : {lowTem_sen2} - {highTem_sen2}\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else {\r\n          renderTem_sen2 = (\r\n            <tr className=\"normalThreshold\">\r\n              <th scope=\"row\">4</th>\r\n              <td>Nhà nấm mối đen</td>\r\n              <td>Cảnh báo nhiệt độ</td>\r\n              <td>Hoạt động bình thường</td>\r\n            </tr>\r\n          );\r\n        }\r\n        if (\r\n          humidValue_sen2 < lowHumid_sen2 ||\r\n          humidValue_sen2 > highHumid_sen2\r\n        ) {\r\n          renderHumid_sen2 = (\r\n            <tr className=\"overThreshold\">\r\n              <th scope=\"row\">5</th>\r\n              <td>Nhà nấm mối đen</td>\r\n              <td>Cảnh báo độ ẩm</td>\r\n              <td>\r\n                Quá ngưỡng. <br />\r\n                Độ ẩm hiện tại là : {humidValue_sen2}\r\n                <br />\r\n                Ngưỡng cho phép : {lowHumid_sen2} - {highHumid_sen2}\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else {\r\n          renderHumid_sen2 = (\r\n            <tr className=\"normalThreshold\">\r\n              <th scope=\"row\">5</th>\r\n              <td>Nhà nấm mối đen</td>\r\n              <td>Cảnh báo độ ẩm</td>\r\n              <td>Hoạt động bình thường</td>\r\n            </tr>\r\n          );\r\n        }\r\n        if (\r\n          carbonicValue_sen2 < lowCar_sen2 ||\r\n          carbonicValue_sen2 > highCar_sen2\r\n        ) {\r\n          renderCar_sen2 = (\r\n            <tr className=\"overThreshold\">\r\n              <th scope=\"row\">6</th>\r\n              <td>Nhà nấm mối đen</td>\r\n              <td>Cảnh báo carbonic</td>\r\n              <td>\r\n                Quá ngưỡng. <br />\r\n                Carbonic hiện tại là : {carbonicValue_sen2}\r\n                <br />\r\n                Ngưỡng cho phép : {lowCar_sen2} - {highCar_sen2}\r\n              </td>\r\n            </tr>\r\n          );\r\n        } else {\r\n          renderCar_sen2 = (\r\n            <tr className=\"normalThreshold\">\r\n              <th scope=\"row\">6</th>\r\n              <td>Nhà nấm mối đen</td>\r\n              <td>Cảnh báo carbobic</td>\r\n              <td>Hoạt động bình thường</td>\r\n            </tr>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              <i className=\"fas fa-exclamation-circle\"></i> Cảnh báo hệ thống\r\n            </h5>\r\n          </div>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr style={{ backgroundColor: \"#27a9e3\" }}>\r\n                <th scope=\"col\">#</th>\r\n                <th>Tên nhà nấm</th>\r\n                <th scope=\"col\">Loại cảnh báo</th>\r\n                <th scope=\"col\">Nội dung cảnh báo</th>\r\n                <th>Thời gian cảnh báo</th>\r\n                {/* <th scope=\"col\">Handle</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {renderTem_sen1}\r\n              {renderHumid_sen1}\r\n              {renderCar_sen1}\r\n              {renderTem_sen2}\r\n              {renderHumid_sen2}\r\n              {renderCar_sen2}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    sensor1: state.home.sensor1,\r\n    sensor2: state.home.sensor2,\r\n    alarm_sensor1: state.alarm.alarm_sensor1,\r\n    alarm_sensor2: state.alarm.alarm_sensor2\r\n  };\r\n};\r\nexport default connect(mapState, {\r\n  getDataSensor1,\r\n  getDataSensor2,\r\n  getAlarmSensor1,\r\n  getAlarmSensor2\r\n})(withRouter(Alarm));\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  icon,\r\n  type,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">\r\n          <i className={icon}></i>\r\n        </span>\r\n      </div>\r\n      <input\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default InputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { controlManual } from \"./../../actions/controlActions\";\r\nimport InputGroup from \"../common/InputGroup\";\r\n\r\nclass Control extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fan1: \"close\"\r\n    };\r\n  }\r\n  onClick = e => {\r\n    this.props.controlManual();\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"custom-control custom-switch\">\r\n        {/* <input\r\n            name=\"checkbox\"\r\n            type=\"checkbox\"\r\n            class=\"custom-control-input\"\r\n            id=\"customSwitches\"\r\n            onChange={this.onChange()}\r\n          /> */}\r\n        <InputGroup\r\n          type=\"checkbox\"\r\n          placeholder=\"High Threshold\"\r\n          name=\"fan1\"\r\n          value={this.state.highThreshold}\r\n          onChange={this.onChange}\r\n          // error={errors.twitter}\r\n        ></InputGroup>\r\n        <label className=\"custom-control-label\" for=\"customSwitches\">\r\n          Toggle this switch element\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { controlManual })(Control);\r\n","import {\r\n  CONTROL_MANUAL,\r\n  GET_CONTROL,\r\n  FAN_CONTROL,\r\n  FAN1_CONTROL_ON,\r\n  FAN1_CONTROL_OFF,\r\n  HUMID_CONTROL_ON,\r\n  HUMID_CONTROL_OFF,\r\n  CAR_CONTROL_ON,\r\n  CAR_CONTROL_OFF\r\n} from \"../actions/type\";\r\nimport axios from \"axios\";\r\nconst host = process.env.REACT_APP_HOST_API;\r\n\r\nexport const controlManual = () => {\r\n  return dispatch => {\r\n    axios.post(`${host}/api/control/manual`).then(res => {\r\n      dispatch({\r\n        type: CONTROL_MANUAL,\r\n        payload: res\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const getControl = () => {\r\n  return dispatch => {\r\n    axios.get(`${host}/api/control/get-control`).then(res => {\r\n      dispatch({\r\n        type: GET_CONTROL,\r\n        payload: res\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nexport const fanControl = () => {\r\n  return dispatch => {\r\n    axios\r\n      .put(`${host}/api/control/fan-control`)\r\n      .then(res => {\r\n        dispatch({ type: FAN_CONTROL, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const fan1ControlOn = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`${host}/api/control/fan1-control-on`)\r\n      .then(res => {\r\n        dispatch({ type: FAN1_CONTROL_ON, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const fan1ControlOff = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`${host}/api/control/fan1-control-off`)\r\n      .then(res => {\r\n        dispatch({ type: FAN1_CONTROL_OFF, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const humidControlOn = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`${host}/api/control/humid-control-on`)\r\n      .then(res => {\r\n        dispatch({ type: HUMID_CONTROL_ON, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\nexport const humidControlOff = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`${host}/api/control/humid-control-off`)\r\n      .then(res => {\r\n        dispatch({ type: HUMID_CONTROL_OFF, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\nexport const carControlOn = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`${host}/api/control/car-control-on`)\r\n      .then(res => {\r\n        dispatch({ type: CAR_CONTROL_ON, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n\r\nexport const carControlOff = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`${host}/api/control/car-control-off`)\r\n      .then(res => {\r\n        dispatch({ type: CAR_CONTROL_OFF, payload: res });\r\n      })\r\n      .catch(err => console.log(\"err\", err));\r\n  };\r\n};\r\n","// import React, { Component, Fragment } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { getData, initialDevice, getAlarm } from \"../../actions/HomeAction\";\r\n// import { Link } from \"react-router-dom\";\r\n// import InputGroup from \"../common/InputGroup\";\r\n// import SelectListGroup from \"../common/SelectListGroup\";\r\n// import \"./../../style/Home.css\";\r\n// import { updateAlarm } from \"../../actions/alarmActions\";\r\n// import {\r\n//   getControl,\r\n//   fan1ControlOn,\r\n//   // fanControlOn,\r\n//   fanControlOff,\r\n//   humidControlOn,\r\n//   humidControlOff,\r\n//   carControlOn,\r\n//   carControlOff\r\n// } from \"../../actions/controlActions\";\r\n\r\n// class HomeOld extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       conditionType: \"temperature\",\r\n//       highThreshold: \"\",\r\n//       lowThreshold: \"\",\r\n//       checkedValue: false\r\n//     };\r\n//   }\r\n//   fanControlOn = () => {\r\n//     this.props.fanControlOn();\r\n//   };\r\n//   fanControlOff = () => {\r\n//     this.props.fanControlOff();\r\n//   };\r\n//   humidControlOn = () => {\r\n//     this.props.humidControlOn();\r\n//   };\r\n//   humidControlOff = () => {\r\n//     this.props.humidControlOff();\r\n//   };\r\n\r\n//   carControlOn = () => {\r\n//     this.props.carControlOn();\r\n//   };\r\n//   carControlOff = () => {\r\n//     this.props.carControlOff();\r\n//   };\r\n//   onFanButtonChange = e => {\r\n//     var fanValue = {\r\n//       fan: e.target.value\r\n//     };\r\n//     this.props.fan1Control(fanValue);\r\n//     // this.setState({ fanCheckedValue: e.target.value });\r\n//   };\r\n//   onFanClickToggle = event => {\r\n//     event.preventDefault();\r\n//     var fanCheckValue = event.target.checked;\r\n//     var dataFanCheck = {\r\n//       fan: false\r\n//     };\r\n//     this.props.fan1Control(dataFanCheck);\r\n//     this.setState({ checkedValue: event.target.checked });\r\n//   };\r\n//   UNSAFE_componentWillReceiveProps(nextProps) {\r\n//     if (nextProps.control) {\r\n//       var { control } = nextProps;\r\n\r\n//       var control1 = control[\"data\"];\r\n//       console.log(\"control1\", control1);\r\n//       var control2 = control1[\"control\"];\r\n//       var control3 = Object.values(control2)[0];\r\n\r\n//       var fanValue = control3[\"fan\"];\r\n//       var humValue = control3[\"humid\"];\r\n//       var carValue = control3[\"car\"];\r\n//       this.setState({\r\n//         fanCheckValue: fanValue\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   componentWillMount() {\r\n//     this.props.initialDevice();\r\n//     this.props.getData();\r\n//     this.props.getAlarm();\r\n//     this.props.getControl();\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.interval = setInterval(() => {\r\n//       this.props.getData();\r\n//       this.props.getAlarm();\r\n//     }, 4000);\r\n//   }\r\n//   onChange = e => {\r\n//     this.setState({\r\n//       [e.target.name]: e.target.value\r\n//     });\r\n//   };\r\n//   onSubmit = e => {\r\n//     e.preventDefault();\r\n//     var newTem, newHumid, newCarbonic, alarmData;\r\n\r\n//     if (this.state.conditionType === \"temperature\") {\r\n//       newTem = {\r\n//         highTem: this.state.highThreshold,\r\n//         lowTem: this.state.lowThreshold\r\n//       };\r\n//       newHumid = {\r\n//         highHumid: null,\r\n//         lowHumid: null\r\n//       };\r\n//       newCarbonic = {\r\n//         highCar: null,\r\n//         lowCar: null\r\n//       };\r\n//     } else if (this.state.conditionType === \"humidity\") {\r\n//       newTem = {\r\n//         highTem: null,\r\n//         lowTem: null\r\n//       };\r\n//       newHumid = {\r\n//         highHumid: this.state.highThreshold,\r\n//         lowHumid: this.state.lowThreshold\r\n//       };\r\n//       newCarbonic = {\r\n//         highCar: null,\r\n//         lowCar: null\r\n//       };\r\n//     } else if (this.state.conditionType === \"carbonic\") {\r\n//       newTem = {\r\n//         highTem: null,\r\n//         lowTem: null\r\n//       };\r\n//       newHumid = {\r\n//         highHumid: null,\r\n//         lowHumid: null\r\n//       };\r\n//       newCarbonic = {\r\n//         highCar: this.state.highThreshold,\r\n//         lowCar: this.state.lowThreshold\r\n//       };\r\n//     }\r\n//     var alarmData = {\r\n//       temperature: newTem,\r\n//       humidity: newHumid,\r\n//       carbonic: newCarbonic\r\n//     };\r\n\r\n//     this.props.updateAlarm(alarmData, this.props.history);\r\n//     this.props.history.push(\"/alarm\");\r\n//   };\r\n//   render() {\r\n//     console.log(\"thienten111111111\");\r\n//     const { datas } = this.props;\r\n//     var renderItem;\r\n//     var temperatureValue = null,\r\n//       humidValue = null,\r\n//       carbonicValue = null;\r\n//     if (datas && datas !== null && datas !== undefined) {\r\n//       Object.keys(datas).forEach((key, index) => {\r\n//         console.log(\"datas\", datas);\r\n//         if (key === \"data\") {\r\n//           var tmpdata = datas[\"data\"];\r\n\r\n//           Object.keys(tmpdata).forEach((key, index) => {\r\n//             if (key === \"data\") {\r\n//               var result = tmpdata[\"data\"];\r\n\r\n//               Object.keys(result).forEach((key, index) => {\r\n//                 if (key === \"state\") {\r\n//                   var state = result[\"state\"];\r\n//                   console.log(\"state\", state);\r\n//                   Object.keys(state).forEach((key, index) => {\r\n//                     if (key === \"reported\") {\r\n//                       var reported = state[\"reported\"];\r\n//                       console.log(\"reported\", reported);\r\n//                       Object.keys(reported).forEach((key, index) => {\r\n//                         if (key === \"smart_objects\") {\r\n//                           var smart_objects = reported[\"smart_objects\"];\r\n//                           console.log(\"smart_objects\", smart_objects);\r\n//                           var temperature, humid, carbonic;\r\n//                           temperature = Object.values(smart_objects)[0];\r\n//                           console.log(\"temperature\", temperature);\r\n//                           Object.keys(temperature).forEach((key, index) => {\r\n//                             if (key === \"values\") {\r\n//                               var temperatureValue3 = temperature[\"values\"];\r\n//                               var temperatureValue2 = temperatureValue3[0];\r\n//                               temperatureValue = temperatureValue2[\"value\"];\r\n//                             }\r\n//                           });\r\n//                           humid = Object.values(smart_objects)[1];\r\n//                           Object.keys(humid).forEach((key, index) => {\r\n//                             if (key === \"values\") {\r\n//                               var humidValue3 = humid[\"values\"];\r\n//                               var humidValue2 = humidValue3[0];\r\n//                               humidValue = humidValue2[\"value\"];\r\n//                             }\r\n//                           });\r\n//                           carbonic = Object.values(smart_objects)[2];\r\n\r\n//                           Object.keys(carbonic).forEach((key, index) => {\r\n//                             if (key === \"values\") {\r\n//                               var carbonicValue3 = carbonic[\"values\"];\r\n//                               var carbonicValue2 = carbonicValue3[0];\r\n//                               carbonicValue = carbonicValue2[\"value\"];\r\n//                             }\r\n//                           });\r\n\r\n//                           return (renderItem = (\r\n//                             <Fragment>\r\n//                               <div className=\"row\">\r\n//                                 <div className=\"col-4\">\r\n//                                   <div className=\"card card-body bg-light mb-3\">\r\n//                                     <div className=\"row\">\r\n//                                       <div className=\"col-4\">\r\n//                                         <img\r\n//                                           src=\"https://png.pngtree.com/png-clipart/20190619/original/pngtree-vector-humidity-icon-png-image_4002850.jpg\"\r\n//                                           alt=\"\"\r\n//                                         />\r\n//                                       </div>\r\n//                                       <div className=\"col-lg-4 col-md-4 col-4\">\r\n//                                         <h5>Temperature</h5>\r\n//                                         <p>\r\n//                                           {temperatureValue\r\n//                                             ? temperatureValue\r\n//                                             : null}\r\n//                                           <span>\r\n//                                             <sup>o</sup>C\r\n//                                           </span>\r\n//                                         </p>\r\n//                                       </div>\r\n//                                     </div>\r\n//                                   </div>\r\n//                                 </div>\r\n\r\n//                                 <div className=\"col-4\">\r\n//                                   <div className=\"card card-body bg-light mb-3\">\r\n//                                     <div className=\"row\">\r\n//                                       <div className=\"col-4\">\r\n//                                         <img\r\n//                                           src=\"https://png.pngtree.com/png-clipart/20190619/original/pngtree-vector-humidity-icon-png-image_4002850.jpg\"\r\n//                                           alt=\"\"\r\n//                                         />\r\n//                                       </div>\r\n//                                       <div className=\"col-lg-4 col-md-4 col-4\">\r\n//                                         <h5>HUMIDITY</h5>\r\n//                                         <p>\r\n//                                           {humidValue ? humidValue : null}\r\n//                                           <span>%</span>\r\n//                                         </p>\r\n//                                       </div>\r\n//                                     </div>\r\n//                                   </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-4\">\r\n//                                   <div className=\"card card-body bg-light mb-3\">\r\n//                                     <div className=\"row\">\r\n//                                       <div className=\"col-4\">\r\n//                                         <img\r\n//                                           src=\"https://png.pngtree.com/png-vector/20190720/ourlarge/pngtree-sun-icon-for-your-project-png-image_1552456.jpg\"\r\n//                                           alt=\"\"\r\n//                                         />\r\n//                                       </div>\r\n//                                       <div className=\"col-lg-4 col-md-4 col-4\">\r\n//                                         <h5>HUMIDITY</h5>\r\n//                                         <p>\r\n//                                           {carbonicValue ? carbonicValue : null}\r\n//                                           <span>%</span>\r\n//                                         </p>\r\n//                                       </div>\r\n//                                     </div>\r\n//                                   </div>\r\n//                                 </div>\r\n//                               </div>\r\n//                             </Fragment>\r\n//                           ));\r\n//                         }\r\n//                       });\r\n//                     }\r\n//                   });\r\n//                 }\r\n//               });\r\n//             }\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     //////////////////////////////////\r\n//     //// Alarm\r\n\r\n//     const { alarms } = this.props;\r\n//     var renderalarm;\r\n//     if (alarms && alarms !== null && alarms !== undefined) {\r\n//       Object.keys(alarms).forEach((key, index) => {\r\n//         if (key === \"data\") {\r\n//           var tmpdata = alarms[\"data\"];\r\n//           Object.keys(tmpdata).forEach((key, index) => {\r\n//             if (key === \"alarm\") {\r\n//               var alarmData = tmpdata[\"alarm\"];\r\n//               Object.keys(alarmData).forEach((key, index) => {\r\n//                 var alarm = alarmData[0];\r\n\r\n//                 var temManual,\r\n//                   humidManual,\r\n//                   carManual,\r\n//                   highTem,\r\n//                   lowTem,\r\n//                   highHumid,\r\n//                   lowHumid,\r\n//                   highCar,\r\n//                   lowCar;\r\n//                 temManual = alarm[\"temperature\"];\r\n//                 humidManual = alarm[\"humidity\"];\r\n//                 carManual = alarm[\"carbonic\"];\r\n//                 highTem = parseFloat(temManual[\"highTem\"]);\r\n//                 lowTem = parseFloat(temManual[\"lowTem\"]);\r\n//                 highHumid = parseFloat(humidManual[\"highHumid\"]);\r\n//                 lowHumid = parseFloat(humidManual[\"lowHumid\"]);\r\n//                 highCar = parseFloat(carManual[\"highCar\"]);\r\n//                 lowCar = parseFloat(carManual[\"lowCar\"]);\r\n\r\n//                 return (renderalarm = (\r\n//                   <div>\r\n//                     {temperatureValue < lowTem || temperatureValue > highTem ? (\r\n//                       <div>\r\n//                         <span>Nhiet do</span>\r\n//                         <p style={{ color: \"red\" }}>\r\n//                           Giá trị ngưỡng : {lowTem} - {highTem}\r\n//                         </p>\r\n//                         <p>Giá trị vượt ngưỡng: {temperatureValue}</p>\r\n//                       </div>\r\n//                     ) : (\r\n//                       <div>\r\n//                         <span>Nhiet do</span>{\" \"}\r\n//                         <p style={{ color: \"green\" }}>Ok: {temperatureValue}</p>\r\n//                       </div>\r\n//                     )}\r\n\r\n//                     {humidValue < lowHumid || humidValue > highHumid ? (\r\n//                       <div>\r\n//                         <span>Do am</span>\r\n//                         <p style={{ color: \"red\" }}>\r\n//                           Giá trị ngưỡng : {lowHumid} - {highHumid}\r\n//                         </p>\r\n//                         <p>Giá trị vượt ngưỡng: {humidValue}</p>\r\n//                       </div>\r\n//                     ) : (\r\n//                       <div>\r\n//                         <span>Do am</span>{\" \"}\r\n//                         <p style={{ color: \"green\" }}>Ok {humidValue}</p>\r\n//                       </div>\r\n//                     )}\r\n\r\n//                     {carbonicValue < lowCar || carbonicValue > highCar ? (\r\n//                       <div>\r\n//                         <span>Carbonic</span>\r\n//                         <p style={{ color: \"red\" }}>\r\n//                           Giá trị ngưỡng : {lowCar} - {highCar}\r\n//                         </p>\r\n//                         <p>Giá trị vượt ngưỡng: {carbonicValue}</p>\r\n//                       </div>\r\n//                     ) : (\r\n//                       <div>\r\n//                         <span>Carbonic</span>\r\n//                         <p style={{ color: \"green\" }}>OK: {carbonicValue}</p>\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                 ));\r\n//               });\r\n//             }\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n//     var options = [\r\n//       { label: \"Temperature\", value: \"temperature\" },\r\n//       { label: \"Humidity\", value: \"humidity\" },\r\n//       { label: \"Carbonic\", value: \"carbonic\" }\r\n//     ];\r\n//     return (\r\n//       <Fragment>\r\n//         <div className=\"page-breadcrumb\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-12 d-flex no-block align-items-center\">\r\n//               <h4 className=\"page-title\">\r\n//                 <i class=\"fas fa-home\"></i>Sensor node 1\r\n//               </h4>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div class=\"homecard card\">\r\n//           <ul class=\"nav nav-tabs\" role=\"tablist\">\r\n//             <li class=\"nav-item\">\r\n//               <a\r\n//                 class=\"nav-link active\"\r\n//                 data-toggle=\"tab\"\r\n//                 href=\"#warningAndScore\"\r\n//                 role=\"tab\"\r\n//               >\r\n//                 <span class=\"hidden-sm-up\"></span>\r\n//                 <span class=\"hidden-xs-down\">\r\n//                   <i class=\"fas fa-exclamation-circle\"></i> Cảnh báo và thông số\r\n//                 </span>\r\n//               </a>\r\n//             </li>\r\n//             <li class=\"nav-item\">\r\n//               <a class=\"nav-link\" data-toggle=\"tab\" href=\"#profile\" role=\"tab\">\r\n//                 <span class=\"hidden-sm-up\"></span>\r\n//                 <span class=\"hidden-xs-down\">\r\n//                   <i class=\"fas fa-exchange-alt\"></i>Điều khiển và cấu hình\r\n//                 </span>\r\n//               </a>\r\n//             </li>\r\n//           </ul>\r\n\r\n//           <div className=\"tab-content tabcontent-border\">\r\n//             <div\r\n//               className=\"tab-pane active\"\r\n//               id=\"warningAndScore\"\r\n//               role=\"tabpanel\"\r\n//             >\r\n//               <div className=\"card text-white mb-3 card-warning\">\r\n//                 <div className=\"card-header bg-warning-home\">\r\n//                   <i class=\"fas fa-exclamation-triangle\"></i> Trạng thái và cảnh\r\n//                   báo\r\n//                 </div>\r\n//                 <div className=\"card-body border-card-warning\">\r\n//                   <p className=\"card-text\">Al1</p>\r\n//                   <p className=\"card-text\">Al2</p>\r\n//                   <p className=\"card-text\">Al3</p>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div className=\"row\">\r\n//                 <div className=\"card text-white mb-3 card-warning col-6\">\r\n//                   <div className=\"card-header bg-warning-home\">\r\n//                     <i class=\"fas fa-thermometer-three-quarters\"></i> Nhiệt độ\r\n//                     phòng\r\n//                   </div>\r\n//                   <div className=\"card-body border-card-warning\">\r\n//                     <div className=\"row\">\r\n//                       <img\r\n//                         src=\"../../../assets/images/temperature.png\"\r\n//                         alt=\"\"\r\n//                         className=\"img-tem-item\"\r\n//                       />\r\n//                       <div className=\"p-tem-item\">\r\n//                         <span>\r\n//                           {temperatureValue} <sup>o</sup> C\r\n//                         </span>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"card text-white mb-3 card-warning col-6\">\r\n//                   <div className=\"card-header bg-warning-home\">\r\n//                     <i class=\"fas fa-thermometer-three-quarters\"></i> Độ ẩm\r\n//                   </div>\r\n//                   <div className=\"card-body border-card-warning\">\r\n//                     <div className=\"row\">\r\n//                       <img\r\n//                         src=\"../../../assets/images/temperature.png\"\r\n//                         alt=\"\"\r\n//                         className=\"img-tem-item\"\r\n//                       />\r\n//                       <div className=\"p-tem-item\">\r\n//                         <span>{humidValue} %</span>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"row\">\r\n//                 <div className=\"card text-white mb-3 card-warning col-6\">\r\n//                   <div className=\"card-header bg-warning-home\">\r\n//                     <i class=\"fas fa-thermometer-three-quarters\"></i> Carbonic\r\n//                   </div>\r\n//                   <div className=\"card-body border-card-warning\">\r\n//                     <div className=\"row\">\r\n//                       <img\r\n//                         src=\"../../../assets/images/temperature.png\"\r\n//                         alt=\"\"\r\n//                         className=\"img-tem-item\"\r\n//                       />\r\n//                       <div className=\"p-tem-item\">\r\n//                         <span>{carbonicValue} ppm</span>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"tab-pane  p-20\" id=\"profile\" role=\"tabpanel\">\r\n//               {/* control and config */}\r\n//               <div className=\"row\">\r\n//                 <div className=\"card text-white mb-3 card-warning col-6\">\r\n//                   <div className=\"card-header bg-warning-home\">\r\n//                     <i class=\"fas fa-thermometer-three-quarters\"></i> Điều khiển\r\n//                   </div>\r\n//                   <div className=\"card-body border-card-warning\">\r\n//                     <div className=\"row\">\r\n//                       <div className=\"col-3\">\r\n//                         <div className=\"p-10 text-black text-center control-bg-item\">\r\n//                           <h5 className=\"m-b-0 m-t-5\">Quạt</h5>\r\n//                           {/* <button onClick={this.fanControlOn}>On</button> */}\r\n//                           <button onClick={this.fanControlOff}>OFf</button>\r\n//                           {/* <input\r\n//                             type=\"checkbox\"\r\n//                             id=\"fan\"\r\n//                             // ref=\"fan_check\"\r\n//                             checked={this.state.fanCheckValue}\r\n//                             onClick={this.onFanClickToggle}\r\n//                           /> */}\r\n//                           <div class=\"switchToggle \">\r\n//                             {/* <input\r\n//                               type=\"checkbox\"\r\n//                               id=\"fan\"\r\n//                               ref=\"fan_check\"\r\n//                               checked={this.state.checkedValue}\r\n//                               onClick={this.onClickToggle}\r\n//                             /> */}\r\n//                             <label\r\n//                               for=\"switch1\"\r\n//                               style={{ textAlign: \"center\" }}\r\n//                             >\r\n//                               Toggle\r\n//                             </label>\r\n//                           </div>\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"col-3\">\r\n//                         <div className=\"p-10 text-black text-center control-bg-item\">\r\n//                           <h5 className=\"m-b-0 m-t-5\">CO2</h5>\r\n//                           <button onClick={this.carControlOn}>On</button>\r\n//                           <button onClick={this.carControlOff}>OFf</button>\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"col-3\">\r\n//                         <div className=\"p-10 text-black text-center control-bg-item\">\r\n//                           <h5 className=\"m-b-0 m-t-5\">Humid</h5>\r\n//                           <button onClick={this.humidControlOn}>On</button>\r\n//                           <button onClick={this.humidControlOff}>OFf</button>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//                 {/* Control */}\r\n//                 <div className=\"card text-white mb-3 card-warning col-6\">\r\n//                   <div className=\"card-header bg-warning-home\">\r\n//                     <i class=\"fas fa-thermometer-three-quarters\"></i> Mức cảnh\r\n//                     báo\r\n//                   </div>\r\n//                   <div className=\"card-body border-card-warning\">\r\n//                     <form onSubmit={this.onSubmit}>\r\n//                       {/*  Condition Type */}\r\n//                       <label htmlFor=\"conditionType\" className=\"control-label\">\r\n//                         Condition Type\r\n//                       </label>\r\n//                       <SelectListGroup\r\n//                         placeholder=\"Condition Type\"\r\n//                         name=\"conditionType\"\r\n//                         value={this.state.conditionType}\r\n//                         onChange={this.onChange}\r\n//                         // error={errors.status}\r\n//                         options={options}\r\n//                         // info=\"Please chose condition type\"\r\n//                       ></SelectListGroup>\r\n//                       <label htmlFor=\"highThreshold\" className=\"control-label\">\r\n//                         High Threshold\r\n//                       </label>\r\n//                       <InputGroup\r\n//                         type=\"number\"\r\n//                         placeholder=\"High Threshold\"\r\n//                         name=\"highThreshold\"\r\n//                         value={this.state.highThreshold}\r\n//                         onChange={this.onChange}\r\n//                         // error={errors.twitter}\r\n//                       ></InputGroup>\r\n//                       <label htmlFor=\"lowThreshold\" className=\"control-label\">\r\n//                         Low Threshold\r\n//                       </label>\r\n//                       <InputGroup\r\n//                         type=\"number\"\r\n//                         placeholder=\"Low Threshold\"\r\n//                         name=\"lowThreshold\"\r\n//                         value={this.state.lowThreshold}\r\n//                         onChange={this.onChange}\r\n//                         // error={errors.twitter}\r\n//                       ></InputGroup>\r\n//                       <input\r\n//                         type=\"submit\"\r\n//                         className=\"btn btn-info btn-block mt-4 col-4 offset-4\"\r\n//                       />\r\n//                     </form>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </Fragment>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapState = state => {\r\n//   return {\r\n//     datas: state.home.data,\r\n//     alarms: state.home.alarm,\r\n//     control: state.control.control\r\n//   };\r\n// };\r\n// export default connect(mapState, {\r\n//   getData,\r\n//   initialDevice,\r\n//   getAlarm,\r\n//   updateAlarm,\r\n//   getControl,\r\n//   fan1ControlOn,\r\n//   // fanControlOn,\r\n//   fanControlOff,\r\n//   humidControlOn,\r\n//   humidControlOff,\r\n//   carControlOn,\r\n//   carControlOff\r\n// })(HomeOld);\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class HomeOld extends Component {\r\n  render() {\r\n    return <div>asdas</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport InputGroup from \"../common/InputGroup\";\r\nimport {\r\n  updateAlarmSensor1,\r\n  getAlarmSensor1\r\n} from \"./../../actions/alarmActions\";\r\n\r\nclass ControlAlarm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      HighTem_sensor1: null,\r\n      HighHumid_sensor1: null,\r\n      HighCar_sensor1: null,\r\n      LowTem_sensor1: null,\r\n      LowHumid_sensor1: null,\r\n      LowCar_sensor1: null\r\n    };\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.getAlarmSensor1();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.get_AlarmSensor1) {\r\n      var sensor1_data = nextProps.get_AlarmSensor1.data;\r\n      var Items = sensor1_data[\"Items\"];\r\n      var Payload = Items[0][\"Payload\"];\r\n\r\n      this.setState({\r\n        HighTem_sensor1: Payload.HighTem,\r\n        HighHumid_sensor1: Payload.HighHumid,\r\n        HighCar_sensor1: Payload.HighCar,\r\n        LowTem_sensor1: Payload.LowTem,\r\n        LowHumid_sensor1: Payload.LowHumid,\r\n        LowCar_sensor1: Payload.LowCar\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    var data = {\r\n      HighTem: this.state.HighTem_sensor1,\r\n      HighHumid: this.state.HighHumid_sensor1,\r\n      HighCar: this.state.HighCar_sensor1,\r\n      LowTem: this.state.LowTem_sensor1,\r\n      LowHumid: this.state.LowHumid_sensor1,\r\n      LowCar: this.state.LowCar_sensor1\r\n    };\r\n    this.props.updateAlarmSensor1(data);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label for=\"HighTem\">High Temperature</label>\r\n          <InputGroup\r\n            placeholder=\"High Temperature\"\r\n            name=\"HighTem_sensor1\"\r\n            value={this.state.HighTem_sensor1}\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n          ></InputGroup>\r\n          <label for=\"HighTem\">High Humidity</label>\r\n          <InputGroup\r\n            placeholder=\"High Humidity\"\r\n            name=\"HighHumid_sensor1\"\r\n            value={this.state.HighHumid_sensor1}\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n          ></InputGroup>\r\n\r\n          <label for=\"HighTem\">High Carbonic</label>\r\n          <InputGroup\r\n            placeholder=\"High Carbonic\"\r\n            name=\"HighCar_sensor1\"\r\n            value={this.state.HighCar_sensor1}\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n          ></InputGroup>\r\n\r\n          <label for=\"HighTem\">Low Temperature</label>\r\n          <InputGroup\r\n            placeholder=\"Low Temperature\"\r\n            name=\"LowTem_sensor1\"\r\n            value={this.state.LowTem_sensor1}\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n          ></InputGroup>\r\n\r\n          <label for=\"HighTem\">Low Humidity</label>\r\n          <InputGroup\r\n            placeholder=\"Low Humidity\"\r\n            name=\"LowHumid_sensor1\"\r\n            value={this.state.LowHumid_sensor1}\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n          ></InputGroup>\r\n\r\n          <label for=\"HighTem\">Low Carbonic</label>\r\n          <InputGroup\r\n            placeholder=\"Low Carbonic\"\r\n            name=\"LowCar_sensor1\"\r\n            value={this.state.LowCar_sensor1}\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n          ></InputGroup>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            className=\"btn btn-info btn-large mt-4\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n    get_AlarmSensor1: state.alarm.alarm_sensor1\r\n  };\r\n};\r\n\r\nexport default connect(mapState, { updateAlarmSensor1, getAlarmSensor1 })(\r\n  ControlAlarm\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAlarmSensor1,\r\n  updateAlarmSensor1\r\n} from \"./../../actions/alarmActions\";\r\nimport InputGroup from \"../common/InputGroup\";\r\nclass AlarmRule1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      HighTem_sensor1: null,\r\n      HighHumid_sensor1: null,\r\n      HighCar_sensor1: null,\r\n      LowTem_sensor1: null,\r\n      LowHumid_sensor1: null,\r\n      LowCar_sensor1: null\r\n    };\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getAlarmSensor1();\r\n  }\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    var data = {\r\n      HighTem: this.state.HighTem_sensor1,\r\n      HighHumid: this.state.HighHumid_sensor1,\r\n      HighCar: this.state.HighCar_sensor1,\r\n      LowTem: this.state.LowTem_sensor1,\r\n      LowHumid: this.state.LowHumid_sensor1,\r\n      LowCar: this.state.LowCar_sensor1\r\n    };\r\n    this.props.updateAlarmSensor1(data);\r\n  };\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.get_AlarmSensor1) {\r\n      var sensor1_data = nextProps.get_AlarmSensor1.data;\r\n      var Items = sensor1_data[\"Items\"];\r\n      var Payload = Items[0][\"Payload\"];\r\n\r\n      this.setState({\r\n        HighTem_sensor1: Payload.HighTem,\r\n        HighHumid_sensor1: Payload.HighHumid,\r\n        HighCar_sensor1: Payload.HighCar,\r\n        LowTem_sensor1: Payload.LowTem,\r\n        LowHumid_sensor1: Payload.LowHumid,\r\n        LowCar_sensor1: Payload.LowCar\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"card card-success\">\r\n          <div className=\"card-header statusinfo\">\r\n            <i class=\"fas fa-desktop titleTab\"></i>\r\n            Alarm rule\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                {/* form */}\r\n\r\n                <form role=\"form\" onSubmit={this.onSubmit}>\r\n                  <h3>Nhiệt độ</h3>\r\n                  <div class=\"row\">\r\n                    <div class=\"form-group col-6\">\r\n                      <label>High safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"High Temperature\"\r\n                        name=\"HighTem_sensor1\"\r\n                        value={this.state.HighTem_sensor1}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                      <label>Low safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"Low Temperature\"\r\n                        name=\"LowTem_sensor1\"\r\n                        value={this.state.LowTem_sensor1}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                  </div>\r\n                  {/* End nhiet do */}\r\n                  {/* Start do am */}\r\n                  <h3>Độ ẩm</h3>\r\n                  <div class=\"row\">\r\n                    <div class=\"form-group col-6\">\r\n                      <label>High safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"High Humidity\"\r\n                        name=\"HighHumid_sensor1\"\r\n                        value={this.state.HighHumid_sensor1}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                      <label>Low safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"Low Humidity\"\r\n                        name=\"LowHumid_sensor1\"\r\n                        value={this.state.LowHumid_sensor1}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                  </div>\r\n                  {/* End Do am */}\r\n                  {/* Start carbonic */}\r\n                  <h3>Carbonic</h3>\r\n                  <div class=\"row\">\r\n                    <div class=\"form-group col-6\">\r\n                      <label>High safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"High Carbonic\"\r\n                        name=\"HighCar_sensor1\"\r\n                        value={this.state.HighCar_sensor1}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                      <label>Low safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"Low Carbonic\"\r\n                        name=\"LowCar_sensor1\"\r\n                        value={this.state.LowCar_sensor1}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                  </div>\r\n                  {/* End Carbonic */}\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className=\"btn btn-info btn-large mt-4\"\r\n                  />\r\n                </form>\r\n\r\n                {/* end Form */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapState = state => {\r\n  return {\r\n    get_AlarmSensor1: state.alarm.alarm_sensor1\r\n  };\r\n};\r\n\r\nexport default connect(mapState, {\r\n  updateAlarmSensor1,\r\n  getAlarmSensor1\r\n})(AlarmRule1);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fan1ControlOn, fan1ControlOff } from \"./../../actions/controlActions\";\r\nclass Control1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // fan1: \"On\", //1\r\n      // fan1_status: true,\r\n      fan2: \"On\", //2\r\n      fan2_status: true,\r\n      machineHumid1: \"On\", //3\r\n      machineHumid1_status: true,\r\n      machineHumid2: \"On\", //4\r\n      machineHumid2_status: true,\r\n      shockTemperature1: \"On\", //5\r\n      shockTemperature1_status: true,\r\n      shockTemperature2: \"On\", //6\r\n      shockTemperature2_status: true,\r\n      light1: \"On\", //7\r\n      light1_status: true,\r\n      light2: \"On\", //8\r\n      light2_status: true,\r\n      roof1: \"On\", //9\r\n      roof1_status: true,\r\n      roof2: \"On\", //10\r\n      roof2_status: true,\r\n      fanCO1: \"On\", //11\r\n      fanC01_status: true,\r\n      fanCO2: \"On\", //12\r\n      fanCO2_status: true,\r\n      testing: \"On\",\r\n      testing_status: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage) {\r\n      if (localStorage.getItem(\"fan1\")) {\r\n        var tmp1 = JSON.parse(localStorage.getItem(\"fan1\"));\r\n\r\n        this.setState({\r\n          fan1: tmp1.fan1,\r\n          fan1_status: tmp1.fan1_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"fan2\")) {\r\n        var tmp2 = JSON.parse(localStorage.getItem(\"fan2\"));\r\n        this.setState({\r\n          fan2: tmp2.fan2,\r\n          fan2_status: tmp2.fan2_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"machineHumid1\")) {\r\n        var tmp3 = JSON.parse(localStorage.getItem(\"machineHumid1\"));\r\n        this.setState({\r\n          machineHumid1: tmp3.machineHumid1,\r\n          machineHumid1_status: tmp3.machineHumid1_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"machineHumid2\")) {\r\n        var tmp4 = JSON.parse(localStorage.getItem(\"machineHumid2\"));\r\n        this.setState({\r\n          machineHumid2: tmp4.machineHumid2,\r\n          machineHumid2_status: tmp4.machineHumid2_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"shockTemperature1\")) {\r\n        var tmp5 = JSON.parse(localStorage.getItem(\"shockTemperature1\"));\r\n        this.setState({\r\n          shockTemperature1: tmp5.shockTemperature1,\r\n          shockTemperature1_status: tmp5.shockTemperature1_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"shockTemperature2\")) {\r\n        var tmp6 = JSON.parse(localStorage.getItem(\"shockTemperature2\"));\r\n        this.setState({\r\n          shockTemperature2: tmp6.shockTemperature2,\r\n          shockTemperature2_status: tmp6.shockTemperature2_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"light1\")) {\r\n        var tmp7 = JSON.parse(localStorage.getItem(\"light1\"));\r\n        this.setState({\r\n          light1: tmp7.light1,\r\n          light1_status: tmp7.light1_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"light2\")) {\r\n        var tmp8 = JSON.parse(localStorage.getItem(\"light2\"));\r\n        this.setState({\r\n          light2: tmp8.light2,\r\n          light2_status: tmp8.light2_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"roof1\")) {\r\n        var tmp9 = JSON.parse(localStorage.getItem(\"roof1\"));\r\n        this.setState({\r\n          roof1: tmp9.roof1,\r\n          roof1_status: tmp9.roof1_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"roof2\")) {\r\n        var tmp10 = JSON.parse(localStorage.getItem(\"roof2\"));\r\n        this.setState({\r\n          roof2: tmp10.roof2,\r\n          roof2_status: tmp10.roof2_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"fanCO1\")) {\r\n        var tmp11 = JSON.parse(localStorage.getItem(\"fanCO1\"));\r\n        this.setState({\r\n          fanCO1: tmp11.fanCO1,\r\n          fanCO1_status: tmp11.fanCO1_status\r\n        });\r\n      }\r\n      if (localStorage.getItem(\"fanCO2\")) {\r\n        var tmp12 = JSON.parse(localStorage.getItem(\"fanCO2\"));\r\n        this.setState({\r\n          fanCO2: tmp12.fanCO2,\r\n          fanCO2_status: tmp12.fanCO2_status\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  setStatefan1 = () => {\r\n    if (this.state.fan1 === \"On\") {\r\n      var tmp = \"Off\";\r\n    } else if (this.state.fan1 === \"Off\") {\r\n      var tmp = \"On\";\r\n    }\r\n    this.setState({\r\n      fan1: tmp,\r\n      fan1_status: !this.state.fan1_status\r\n    });\r\n\r\n    var data = {\r\n      fan1: this.state.fan1,\r\n      fan1_status: this.state.fan1_status\r\n    };\r\n    localStorage.setItem(\"fan1\", JSON.stringify(data));\r\n  };\r\n  callPublishFan1 = () => {\r\n    var tmp = localStorage.setItem(\"fan1\");\r\n    if (tmp.fan1 === \"Off\") {\r\n      console.log(\"off\");\r\n    } else {\r\n      console.log(\"on\");\r\n    }\r\n  };\r\n  onClickFan1 = async () => {\r\n    // var fam1Data = localStorage.getItem(\"fan1\");\r\n    if (this.state.fan1 === \"On\") {\r\n      var tmp = \"Off\";\r\n    } else if (this.state.fan1 === \"Off\") {\r\n      var tmp = \"On\";\r\n    }\r\n    this.setState({\r\n      fan1: tmp,\r\n      fan1_status: !this.state.fan1_status\r\n    });\r\n\r\n    var data = {\r\n      fan1: this.state.fan1,\r\n      fan1_status: this.state.fan1_status\r\n    };\r\n    localStorage.setItem(\"fan1\", JSON.stringify(data));\r\n  };\r\n  onClickFan2 = () => {\r\n    if (this.state.fan1 === \"On\") {\r\n      var tmp = \"Off\";\r\n      this.props.fan1ControlOff();\r\n    } else if (this.state.fan1 === \"Off\") {\r\n      var tmp = \"On\";\r\n      this.props.fan1ControlOn();\r\n    }\r\n    this.setState({\r\n      fan1: tmp,\r\n      fan1_status: !this.state.fan1_status\r\n    });\r\n\r\n    var data = {\r\n      fan1: this.state.fan1,\r\n      fan1_status: this.state.fan1_status\r\n    };\r\n    localStorage.setItem(\"fan1\", JSON.stringify(data));\r\n  };\r\n  onClick2 = () => {\r\n    if (this.state.testing === \"On\") {\r\n      var tmp = \"Off\";\r\n    } else if (this.state.testing === \"Off\") {\r\n      var tmp = \"On\";\r\n    }\r\n    this.setState({\r\n      testing: tmp,\r\n      testing_status: !this.state.testing_status\r\n    });\r\n\r\n    var data = {\r\n      testing: this.state.testing,\r\n      testing_status: this.state.testing_status\r\n    };\r\n    localStorage.setItem(\"testing\", JSON.stringify(data));\r\n  };\r\n\r\n  onClick = (name, status) => {\r\n    console.log(name, status);\r\n\r\n    if (this.state.name === \"On\") {\r\n      console.log(\"state name\");\r\n      var tmp = \"Off\";\r\n    } else if (this.state.name === \"Off\") {\r\n      var tmp = \"On\";\r\n    }\r\n    this.setState({\r\n      name: tmp,\r\n      status: !this.state.status\r\n    });\r\n\r\n    var data = {\r\n      name: this.state.name,\r\n      status: this.state.status\r\n    };\r\n    localStorage.setItem(`${name}`, JSON.stringify(data));\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div class=\"col-md-3 col-sm-3 col-3\">\r\n          <div class=\"card card-success\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title\">Quạt 1</h3>\r\n            </div>\r\n\r\n            <div class=\"card-body\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={this.onClickFan1}\r\n              >\r\n                {this.state.fan1}\r\n              </button>\r\n              <button onClick={this.props.fan1ControlOn}>On</button>\r\n              <button onClick={this.props.fan1ControlOff}>Off</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-sm-3 col-3\">\r\n          <div class=\"card card-success\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title\">Quạt 2</h3>\r\n            </div>\r\n\r\n            <div class=\"card-body\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={this.onClickFan2}\r\n              >\r\n                {this.state.fan2}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapState = state => {\r\n//   return {};\r\n// };\r\nexport default connect(null, { fan1ControlOn, fan1ControlOff })(Control1);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./../../style/MushRoom1.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDataSensor1 } from \"./../../actions/HomeAction\";\r\nimport AlarmRule1 from \"./../control-alarm/AlarmRule1\";\r\nimport Control1 from \"./../control-alarm/Control1\";\r\n\r\nclass MushRoom1 extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getDataSensor1();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.props.getDataSensor1();\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    const { sensor1 } = this.props;\r\n\r\n    if (sensor1 && sensor1 !== null && sensor1 !== undefined) {\r\n      var CarbonicValue = parseFloat(sensor1[0][\"value\"][0][\"value\"]);\r\n      var TemperatureValue = parseFloat(sensor1[1][\"value\"][0][\"value\"]);\r\n      var HumidityValue = parseFloat(sensor1[2][\"value\"][0][\"value\"]);\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0 text-dark\">\r\n                  <i class=\"fas fa-home titleTab\"></i>Nhà nấm bào ngư\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"nav nav-tabs\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link active\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#warning\"\r\n                >\r\n                  <i className=\"fas fa-exclamation-circle titleTab\"></i> Cảnh\r\n                  báo và thông số\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" data-toggle=\"tab\" href=\"#control\">\r\n                  <i className=\"fas fa-exchange-alt titleTab\"></i>Điều khiển và\r\n                  cấu hình\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n              <div id=\"warning\" className=\"container tab-pane active\">\r\n                <div className=\"col-12 statusandwarning\">\r\n                  <div className=\"card card-success\">\r\n                    <div className=\"card-header statusinfo\">\r\n                      <i className=\"fas fa-exclamation-triangle fontawsome\"></i>\r\n                      Trạng thái và cảnh báo\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                          <p className=\"statusinfo\">\r\n                            <i className=\"fas fa-exclamation-circle fontawsome\"></i>\r\n                            Cảnh báo nhiệt độ\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p className=\"statusinfo\">\r\n                            <i className=\"fas fa-exclamation-circle fontawsome\"></i>\r\n                            Cảnh báo độ ẩm\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p className=\"statusinfo\">\r\n                            <i className=\"fas fa-exclamation-circle fontawsome\"></i>\r\n                            Cảnh báo CO2\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 infomation\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-sm-6 col-4\">\r\n                      <div className=\"info-box bg-gradient-success\">\r\n                        <span className=\"info-box-icon\">\r\n                          <i className=\"fas fa-thermometer-half\"></i>\r\n                        </span>\r\n\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text\">Nhiệt độ</span>\r\n                          <span className=\"info-box-number\">\r\n                            {TemperatureValue}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4 col-sm-6 col-4\">\r\n                      <div className=\"info-box bg-gradient-warning\">\r\n                        <span className=\"info-box-icon\">\r\n                          <i className=\"fas fa-cloud-rain\"></i>\r\n                        </span>\r\n\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text\">Độ ẩm</span>\r\n                          <span className=\"info-box-number\">\r\n                            {HumidityValue}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4 col-sm-6 col-4\">\r\n                      <div className=\"info-box bg-gradient-info\">\r\n                        <span className=\"info-box-icon\">\r\n                          <i className=\"fas fa-water\"></i>\r\n                        </span>\r\n\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text\">CO2</span>\r\n                          <span className=\"info-box-number\">\r\n                            {CarbonicValue}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*  Control and Config */}\r\n              <div id=\"control\" className=\"container tab-pane fade\">\r\n                <div className=\"col-12 statusandwarning\">\r\n                  <div className=\"card card-success\">\r\n                    <div className=\"card-header statusinfo\">\r\n                      <i class=\"fas fa-desktop titleTab\"></i>\r\n                      Điều khiển\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <Control1></Control1>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* End Control */}\r\n                  {/* Start Modify Tem, humid, Car */}\r\n                  <AlarmRule1></AlarmRule1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapState = state => {\r\n  return {\r\n    sensor1: state.home.sensor1\r\n  };\r\n};\r\n\r\nexport default connect(mapState, {\r\n  getDataSensor1\r\n})(MushRoom1);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAlarmSensor2,\r\n  updateAlarmSensor2\r\n} from \"./../../actions/alarmActions\";\r\nimport InputGroup from \"../common/InputGroup\";\r\n\r\nclass AlarmRule2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      HighTem_sensor2: null,\r\n      HighHumid_sensor2: null,\r\n      HighCar_sensor2: null,\r\n      LowTem_sensor2: null,\r\n      LowHumid_sensor2: null,\r\n      LowCar_sensor2: null\r\n    };\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getAlarmSensor2();\r\n  }\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    var data = {\r\n      HighTem: this.state.HighTem_sensor2,\r\n      HighHumid: this.state.HighHumid_sensor2,\r\n      HighCar: this.state.HighCar_sensor2,\r\n      LowTem: this.state.LowTem_sensor2,\r\n      LowHumid: this.state.LowHumid_sensor2,\r\n      LowCar: this.state.LowCar_sensor2\r\n    };\r\n    this.props.updateAlarmSensor2(data);\r\n  };\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.get_AlarmSensor2) {\r\n      var sensor2_data = nextProps.get_AlarmSensor2.data;\r\n      var Items = sensor2_data[\"Items\"];\r\n      var Payload = Items[0][\"Payload\"];\r\n\r\n      this.setState({\r\n        HighTem_sensor2: Payload.HighTem,\r\n        HighHumid_sensor2: Payload.HighHumid,\r\n        HighCar_sensor2: Payload.HighCar,\r\n        LowTem_sensor2: Payload.LowTem,\r\n        LowHumid_sensor2: Payload.LowHumid,\r\n        LowCar_sensor2: Payload.LowCar\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"card card-success\">\r\n          <div className=\"card-header statusinfo\">\r\n            <i class=\"fas fa-desktop titleTab\"></i>\r\n            Alarm rule\r\n          </div>\r\n\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                {/* form */}\r\n\r\n                <form role=\"form\" onSubmit={this.onSubmit}>\r\n                  <h3>Nhiệt độ</h3>\r\n                  <div class=\"row\">\r\n                    <div class=\"form-group col-6\">\r\n                      <label>High safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"High Temperature\"\r\n                        name=\"HighTem_sensor2\"\r\n                        value={this.state.HighTem_sensor2}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                      <label>Low safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"Low Temperature\"\r\n                        name=\"LowTem_sensor2\"\r\n                        value={this.state.LowTem_sensor2}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                  </div>\r\n                  {/* End nhiet do */}\r\n                  {/* Start do am */}\r\n                  <h3>Độ ẩm</h3>\r\n                  <div class=\"row\">\r\n                    <div class=\"form-group col-6\">\r\n                      <label>High safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"High Humidity\"\r\n                        name=\"HighHumid_sensor2\"\r\n                        value={this.state.HighHumid_sensor2}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                      <label>Low safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"Low Humidity\"\r\n                        name=\"LowHumid_sensor2\"\r\n                        value={this.state.LowHumid_sensor2}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                  </div>\r\n                  {/* End Do am */}\r\n                  {/* Start carbonic */}\r\n                  <h3>Carbonic</h3>\r\n                  <div class=\"row\">\r\n                    <div class=\"form-group col-6\">\r\n                      <label>High safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"High Carbonic\"\r\n                        name=\"HighCar_sensor2\"\r\n                        value={this.state.HighCar_sensor2}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                    <div class=\"form-group col-6\">\r\n                      <label>Low safe threshold</label>\r\n                      <InputGroup\r\n                        placeholder=\"Low Carbonic\"\r\n                        name=\"LowCar_sensor2\"\r\n                        value={this.state.LowCar_sensor2}\r\n                        onChange={this.onChange}\r\n                        type=\"number\"\r\n                      ></InputGroup>\r\n                    </div>\r\n                  </div>\r\n                  {/* End Carbonic */}\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className=\"btn btn-info btn-large mt-4\"\r\n                  />\r\n                </form>\r\n\r\n                {/* end Form */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapState = state => {\r\n  return {\r\n    get_AlarmSensor2: state.alarm.alarm_sensor2\r\n  };\r\n};\r\n\r\nexport default connect(mapState, {\r\n  updateAlarmSensor2,\r\n  getAlarmSensor2\r\n})(AlarmRule2);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./../../style/MushRoom1.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDataSensor2 } from \"./../../actions/HomeAction\";\r\nimport AlarmRule2 from \"./../control-alarm/AlarmRule2\";\r\n\r\nclass MushRoom2 extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.props.getDataSensor2();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.props.getDataSensor2();\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    const { sensor2 } = this.props;\r\n\r\n    if (sensor2 && sensor2 !== null && sensor2 !== undefined) {\r\n      var CarbonicValue = parseFloat(sensor2[0][\"value\"][0][\"value\"]);\r\n      var TemperatureValue = parseFloat(sensor2[1][\"value\"][0][\"value\"]);\r\n      var HumidityValue = parseFloat(sensor2[2][\"value\"][0][\"value\"]);\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1 className=\"m-0 text-dark\">\r\n                  <i class=\"fas fa-home titleTab\"></i>Nhà nấm mối đen\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <ul className=\"nav nav-tabs\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link active\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#warning\"\r\n                >\r\n                  <i className=\"fas fa-exclamation-circle titleTab\"></i> Cảnh\r\n                  báo và thông số\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" data-toggle=\"tab\" href=\"#control\">\r\n                  <i className=\"fas fa-exchange-alt titleTab\"></i>Điều khiển và\r\n                  cấu hình\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"tab-content\">\r\n              <div id=\"warning\" className=\"container tab-pane active\">\r\n                <div className=\"col-12 statusandwarning\">\r\n                  <div className=\"card card-success\">\r\n                    <div className=\"card-header statusinfo\">\r\n                      <i className=\"fas fa-exclamation-triangle fontawsome\"></i>\r\n                      Trạng thái và cảnh báo\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                          <p className=\"statusinfo\">\r\n                            <i className=\"fas fa-exclamation-circle fontawsome\"></i>\r\n                            Cảnh báo nhiệt độ\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p className=\"statusinfo\">\r\n                            <i className=\"fas fa-exclamation-circle fontawsome\"></i>\r\n                            Cảnh báo độ ẩm\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                          <p className=\"statusinfo\">\r\n                            <i className=\"fas fa-exclamation-circle fontawsome\"></i>\r\n                            Cảnh báo CO2\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 infomation\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-sm-6 col-4\">\r\n                      <div className=\"info-box bg-gradient-success\">\r\n                        <span className=\"info-box-icon\">\r\n                          <i className=\"fas fa-thermometer-half\"></i>\r\n                        </span>\r\n\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text\">Nhiệt độ</span>\r\n                          <span className=\"info-box-number\">\r\n                            {TemperatureValue}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4 col-sm-6 col-4\">\r\n                      <div className=\"info-box bg-gradient-warning\">\r\n                        <span className=\"info-box-icon\">\r\n                          <i className=\"fas fa-cloud-rain\"></i>\r\n                        </span>\r\n\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text\">Độ ẩm</span>\r\n                          <span className=\"info-box-number\">\r\n                            {HumidityValue}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4 col-sm-6 col-4\">\r\n                      <div className=\"info-box bg-gradient-info\">\r\n                        <span className=\"info-box-icon\">\r\n                          <i className=\"fas fa-water\"></i>\r\n                        </span>\r\n\r\n                        <div className=\"info-box-content\">\r\n                          <span className=\"info-box-text\">CO2</span>\r\n                          <span className=\"info-box-number\">\r\n                            {CarbonicValue}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*  Control and Config */}\r\n              <div id=\"control\" className=\"container tab-pane fade\">\r\n                <div className=\"col-12 statusandwarning\">\r\n                  <div className=\"card card-success\">\r\n                    <div className=\"card-header statusinfo\">\r\n                      <i class=\"fas fa-desktop titleTab\"></i>\r\n                      Điều khiển\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-4\">sfdsf</div>\r\n                        <div className=\"col-4\">asdfsf</div>\r\n                        <div className=\"col-4\">sdf</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* End Control */}\r\n                  {/* Start Modify Tem, humid, Car */}\r\n                  <AlarmRule2></AlarmRule2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapState = state => {\r\n  return {\r\n    sensor2: state.home.sensor2\r\n  };\r\n};\r\n\r\nexport default connect(mapState, {\r\n  getDataSensor2\r\n})(MushRoom2);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decoded from \"jwt-decode\";\nimport setAuthToken from \"./ultils/setAuthtoken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { clearCurrentProfile } from \"./actions/profileAction\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport NotFound from \"./components/notfound/NotFound\";\nimport Home from \"./components/home/Home\";\nimport Alarm from \"./components/alarm/Alarm\";\nimport Control from \"./components/control/Control\";\nimport HomeOld from \"./components/home/HomeOld\";\nimport ControlAlarm from \"./components/alarm/ControlAlarm\";\nimport MushRoom1 from \"./components/mushroom/MushRoom1\";\nimport MushRoom2 from \"./components/mushroom/MushRoom2\";\nimport Control1 from \"./components/control-alarm/Control1\";\n\n// //Check for token\nif (localStorage.jwtToken) {\n  //Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //Decode token and get user info and exp\n  const decoded = jwt_decoded(localStorage.jwtToken);\n  // Set user and isAutheticated\n  store.dispatch(setCurrentUser(decoded));\n\n  //Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    //Logout user\n    store.dispatch(logoutUser());\n    // Clear current profile\n    store.dispatch(clearCurrentProfile());\n    //Todo : Clear current profile\n    //Redirect to login\n    window.location.href = \"/login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"wrapper\" id=\"main-wrapper\">\n            <Switch>\n              <PrivateRoute exact component={Navbar}></PrivateRoute>\n            </Switch>\n\n            <Route exact path=\"/\" component={Landing}></Route>\n            <div className=\"content-wrapper\">\n              <Route path=\"/login\" exact component={Login}></Route>\n\n              <Route path=\"/alarm\" exact component={Alarm}></Route>\n              <Route path=\"/control\" exact component={Control}></Route>\n              <Route\n                path=\"/control-alarm\"\n                exact\n                component={ControlAlarm}\n              ></Route>\n              <Route\n                path=\"/nha-nam-bao-ngu\"\n                exact\n                component={MushRoom1}\n              ></Route>\n              <Route\n                path=\"/nha-nam-moi-den\"\n                exact\n                component={MushRoom2}\n              ></Route>\n              <Route path=\"/control1\" exact component={Control1}></Route>\n\n              <Switch>\n                <PrivateRoute\n                  path=\"/home\"\n                  exact\n                  component={Home}\n                ></PrivateRoute>\n              </Switch>\n              <Switch>\n                <PrivateRoute\n                  path=\"/home-old\"\n                  exact\n                  component={HomeOld}\n                ></PrivateRoute>\n              </Switch>\n\n              <Switch>\n                <PrivateRoute\n                  path=\"/dashboard\"\n                  exact\n                  component={Dashboard}\n                ></PrivateRoute>\n              </Switch>\n\n              <Route path=\"/not-found\" exact component={NotFound}></Route>\n            </div>\n            <Footer></Footer>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}